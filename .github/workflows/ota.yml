name: Generate OTA JSON

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"  # 每天自动执行一次，可根据需要修改

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Get latest release info
        id: release
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const asset = release.data.assets.find(a =>
              a.name.endsWith('wikjxwrt-x86-64-generic-ext4-combined-efi.img.gz')
            );

            if (!asset) throw new Error('Firmware not found in release assets.');

            const buildDate = Math.floor(new Date(release.data.created_at).getTime() / 1000).toString();

            const fs = require('fs');
            fs.mkdirSync('api', { recursive: true });

            const jsonData = {
              "x86_64": [
                {
                  "build_date": buildDate,
                  "sha256sum": "",  // SHA256 稍后填
                  "url": asset.browser_download_url
                }
              ]
            };

            fs.writeFileSync('api/fw.json', JSON.stringify(jsonData, null, 2));

            core.setOutput('url', asset.browser_download_url);
            core.setOutput('filename', asset.name);

      - name: Download firmware file
        run: |
          wget "${{ steps.release.outputs.url }}" -O firmware.img.gz

      - name: Calculate sha256
        id: hash
        run: |
          sha256=$(sha256sum firmware.img.gz | cut -d' ' -f1)
          echo "sha256=$sha256" >> $GITHUB_OUTPUT

      - name: Update sha256 in JSON
        run: |
          jq '.x86_64[0].sha256sum = "${{ steps.hash.outputs.sha256 }}"' api/fw.json > api/fw.fixed.json
          mv api/fw.fixed.json api/fw.json

      - name: Push fw.json to api branch
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin
          git switch --force-create api
          cp -f api/fw.json ./fw.json
          git add fw.json
          git commit -m "Update fw.json @ $(date -u '+%Y-%m-%d %H:%M:%S')" || echo "No changes"
          git push origin api --force
